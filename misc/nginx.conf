# This nginx config file is preprocessed to replace all ${VARIABLES}
# with their values.


# As a thumb rule: One per CPU. If you are serving a large amount
# of static files, which requires blocking disk reads, you may want
# to increase this from the number of cpu_cores available on your
# system.
#
# The maximum number of connections for Nginx is calculated by:
# max_clients = worker_processes * worker_connections
worker_processes  1;

# Maximum file descriptors that can be opened per process
# This should be > worker_connections
worker_rlimit_nofile 8192;

error_log ${OPENSHIFT_DIY_LOG_DIR}/nginx-error.log notice;
pid ${OPENSHIFT_DATA_DIR}/pid/nginx.pid;

events {
    # When you need > 8000 * cpu_cores connections, you start optimizing
    # your OS, and this is probably the point at where you hire people
    # who are smarter than you, this is *a lot* of requests.
    worker_connections 2048;

    # This sets up some smart queueing for accept(2)'ing requests
    # Set it to "on" if you have > worker_processes
    accept_mutex off;

    # These settings are OS specific, by defualt Nginx uses select(2),
    # however, for a large number of requests epoll(2) and kqueue(2)
    # are generally faster than the default (select(2))
    use epoll; # enable for Linux 2.6+
    # use kqueue; # enable for *BSD (FreeBSD, OS X, ..)
}


http {
    include mime.types;
    default_type application/octet-stream;

    sendfile on;
    tcp_nodelay on;
    tcp_nopush on;
    #send_lowat 12000;

    keepalive_timeout 15;
    
    gzip  on;
    gzip_disable "msie6";
    gzip_comp_level 2;
    gzip_min_length 1100;
    gzip_buffers 4 8k;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    
    proxy_buffers 8 64k;
    proxy_intercept_errors on;
    proxy_connect_timeout 3s;
    proxy_read_timeout 3s;
    proxy_send_timeout 3s;


    server {
        listen ${OPENSHIFT_INTERNAL_IP}:${OPENSHIFT_INTERNAL_PORT};
        server_name localhost;

        access_log ${OPENSHIFT_DIY_LOG_DIR}/nginx-access.log;
        error_log ${OPENSHIFT_DIY_LOG_DIR}/nginx-app.error.log warn;

        charset utf-8;

        port_in_redirect off;
        index index.html;

        #### Mobile browsers detect START.

        set $mobile_rewrite do_not_perform;
        set $mb_cookie "";

        if ($http_user_agent ~* "android|(bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino") {
            set $mobile_rewrite perform;
        }
         
        if ($http_user_agent ~* "^(1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-)") {
            set $mobile_rewrite perform;
        }

        # #check if query arg = yes (example.com?mobile=yes), set variable
        # if ($arg_mobile = 'yes') {
        #     set $mb_cookie "mobile=yes";
        #     set $mobile_rewrite perform;
        # }

        # #check if query arg = no (example.com?mobile=no), break
        # if ($arg_mobile = 'no') {
        #     set $mb_cookie "mobile=no";
        #     set $mobile_rewrite do_not_perform;
        # }
        
        # add_header Set-Cookie $mb_cookie;

        # #check if cookie mobile=yes, set variable
        # if ($http_cookie ~ 'mobile=yes') {
        #     set $mobile_rewrite perform;
        # }

        # #check if cookie mobile=no, break
        # if ($http_cookie ~ 'mobile=no') {
        #     set $mobile_rewrite do_not_perform;
        # }
         
        #### Mobile browsers detect END.


        # Redirect to mobile version if required.
        if ($mobile_rewrite = perform) {
            rewrite ^/b(\d+)/(?!mobile)(.*)$ /b$1/mobile/$2? last;
        }

        # Redirect root URL to frontend.
        location = / {
            rewrite ^/$ /b2013/ permanent;
        }

        location /mobile/ {
            rewrite ^/(mobile/.*)$ /b2013/$1 last;
        }

        # Frontends.
        location /b2011 {
            alias ${OPENSHIFT_REPO_DIR}/web/b2011;
        }

        location /b2013 {
            alias ${OPENSHIFT_REPO_DIR}/web/b2013;
        }

        location /cqc {
            alias ${OPENSHIFT_REPO_DIR}/web/cqc;
        }

        # uWSGI backend.
        location /v1 {
            uwsgi_pass unix://${OPENSHIFT_DATA_DIR}/pid/uwsgi.sock;
            include uwsgi_params;
            uwsgi_param UWSGI_SCRIPT /v1;
        }
        
        # /img/<name>.jpg URLs.
        location ~ ^/img/(.+\.(?:gif|jpe?g|png))$ {
            alias ${OPENSHIFT_DATA_DIR}/quiz/img/$1;
        }

        # Uncomment to provide backend API documentation.
        # NOTE: Valid only on test server. See OpenShift's deploy script.
        #location /apidoc {
        #    alias ${OPENSHIFT_DATA_DIR}/quiz/apidoc;
        #}

        # Uncomment to provide test frontend.
        #location /testapp {
        #    alias ${OPENSHIFT_REPO_DIR}/tests/static;
        #}

    }  # server

}  # http
