Backend features
================

Backend provides quizes and exams using quiestions database.
Also users statistics is collected based on quiz/exam results.
30 days statistics is stored for each user.

There are the following types of users:
* admin - may create/remove schools.
* schools - may create stdents and request school's statistics.
* students - may pass quiz, exam, and request statistics.
* school guest - the same as student but has limited number requests per an hour.

Quiz
----

Quiz is a set of 40 random questions for the given topic.
Quiz is always contains questions which was not answered in previous quizzes.
To provide this we check quiz_answers table.
Quiz answers will be saved in the quiz_answers table
and also in the answers table.
If all questions are answered then we cleanup quiz_answers and generate quiz again.

Exam
----

Exam is a set of 40 questions.
There must be one question per chapter with 'normal' proirity
and two questions per chapter with 'high' priority.
See __generate_idList() in the wsgi/quiz/core/exammixin.py for more info.

Exam expires after 3 hrs after creating and will be removed
by the cleanup script (see misc/dbtools/update.py)

Exam is passwd if there are <= 4 errors.

Exam is registered in the exams table and it's questions in the
exam_answers table.

After exam answers are received we update exam_answers and exams tables and
also save answers in the answers table.

Also users table will be touched to update student's progress coef.

Error review
------------

Error review allows student fix wrong answers.
Error review is a set of 40 random questions from the answers table.
Error review results will be saved to the answers table.


Student statistics
------------------

Student's statistics is updated after quiz, exam and error review.
More precisely if answer in the answers table is updated
then we also update topics statistics table topic_err_current
for the given question, user and topic.
And after topic_err_current updates we also update errors snapshot
(topic_err_snapshot).
All this actions are performed mainly by triggers (see misc/dbtools/func.py).

School statistics
------------------

Part of the school's topics statistics is updated after each student
activity, but only current state (ie last week data is not recalculated).
School statistics snapshots are created by cron (see misc/dbupate.py).
